_target_: src.models.jetclass_classifiers.ParticleNetPL

conv_params:
    # ParticleNet
    - [16, [64, 64, 64]]
    - [16, [128, 128, 128]]
    - [16, [256, 256, 256]]
    # ParticleNet-Lite
    # - [7, [32, 32, 32]]
    # - [7, [64, 64, 64]]
fc_params: [[256, 0.1]] # ParticleNet
# fc_params: [[128, 0.1]] # ParticleNet-Lite
input_dim: null
num_classes: 10
use_fusion: False
use_fts_bn: True
use_counts: True
for_inference: False

optimizer:
  _target_: torch.optim.AdamW
  _partial_: true
  lr: 0.001
  weight_decay: 0.0001

# using the method listed in the paper https://arxiv.org/abs/1902.08570, but with other parameters
scheduler:
  _target_: src.schedulers.lr_scheduler.OneCycleCooldown
  _partial_: true
  warmup: 4
  cooldown: 10
  cooldown_final: 10
  max_lr: 0.0002
  initial_lr: 0.00003
  final_lr: 0.00002
  max_iters: 200

# scheduler:
#   _target_: torch.optim.lr_scheduler.ConstantLR
#   _partial_: true
