# @package _global_

# to execute this experiment run:
# python train.py experiment=jetclass

defaults:
  - override /data: jetclass.yaml
  - override /model: flow_matching.yaml
  - override /callbacks: jetclass.yaml
  - override /trainer: gpu.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters



tags: ["flow_matching", "JetClass", "uncond", "dev"]

seed: 12345

trainer:
  min_epochs: 1
  max_epochs: 1000
  gradient_clip_val: 0.5

model:
  num_particles: 128
  global_cond_dim: 0 # needs to be calculated when using conditioning
  local_cond_dim: 0

data:
  number_of_used_jets: 200000
  remove_etadiff_tails: True
  use_custom_eta_centering: True
  conditioning_pt: False
  conditioning_eta: False
  conditioning_mass: False
  conditioning_num_particles: False
  

callbacks:
  ema:
    decay: 0.999
    apply_ema_every_n_steps: 1
    start_step: 0
    save_ema_weights_in_callback_state: True
    evaluate_ema_weights_instead: True

  #early_stopping:
  #  monitor: "val/loss"
  #  patience: 2000
  #  mode: "min"

task_name: "jetclass_flow_matching_dev"

logger:
  wandb:
    tags: ${tags}
    group: "jetclass_flow_matching_dev"
    name: ${task_name}
  comet:
    experiment_name: ${task_name}
