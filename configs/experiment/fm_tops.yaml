# @package _global_

# to execute this experiment run:
# python train.py experiment=fm_tops

defaults:
  - override /data: /jetnet/jetnet_tops_30.yaml
  - override /model: cnf_flow_matching.yaml
  - override /callbacks: jetnet.yaml
  - override /trainer: gpu.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters



tags: ["flow_matching", "tops", "30", "test_runs"]

seed: 12345

trainer:
  min_epochs: 3
  max_epochs: 30
  gradient_clip_val: 0.5
  devices: 1
  # detect_anomaly: true # raise exception if NaN or +/-inf is detected in any tensor

model:
  optimizer:
    lr: 0.001
  features: 3
  hidden_dim: 128
  num_particles: 30
  frequencies: 6
  layers: 6
  n_transforms: 1
  activation: leaky_relu
  wrapper_func: weight_norm
  # epic
  latent: 16
  return_latent_space: False
  global_cond_dim: 2 # needs to be calculated when using conditioning
  local_cond_dim: 0
  t_local_cat: True
  t_global_cat: False

  dropout: 0.0
  # loss
  loss_type: diffusion
  sigma: 1e-4
  t_emb: gaussian
  # scheduler
  scheduler:
    warmup: ${trainer.min_epochs}
    max_iters: ${trainer.max_epochs}
  #cosine_annealing:
  #scheduler:
  #  T_max: ${trainer.max_epochs}

data:
  jet_type:
    #- "g"
    #- "q"
    - "t"
    #- "w"
    #- "z"
  batch_size: 1024
  num_particles: ${model.num_particles}
  variable_jet_sizes: True
  centering: False
  normalize: False
  normalize_sigma: 5
  use_calculated_base_distribution: False
  conditioning_type: False
  conditioning_pt: True
  conditioning_eta: False
  conditioning_mass: True
  conditioning_num_particles: False
  val_fraction: 0.1
  test_fraction: 0.3
  drop_last: False
  # global_cond_dim needs to be set when using conditioning

callbacks:
  ema:
    decay: 0.9999
    apply_ema_every_n_steps: 1
    start_step: 0
    save_ema_weights_in_callback_state: True
    evaluate_ema_weights_instead: True

  jetnet_eval:
    every_n_epochs: 5
    num_jet_samples: 10000
    data_type: "val"
    use_ema: ${callbacks.ema.evaluate_ema_weights_instead}
    generation_config:
      ode_solver: "em"
      verbose: True
    w_dist_config:
      num_batches: 5
    plot_config:
      plot_w_dists: False

  #early_stopping:
  #  monitor: "val/loss"
  #  patience: 2000
  #  mode: "min"

task_name: "fm_tops-${model.num_particles}-1"

logger:
  wandb:
    project: "test_runs"
    tags: ${tags}
    group: "fm_tops"
    name: ${task_name}
  comet:
    experiment_name: ${task_name}
    project_name: "test_runs"
