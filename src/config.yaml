task_name: lhco_both_jets2
tags:
- flow_matching
- LHCO
- cond
- both_jet
train: true
test: true
ckpt_path: null
seed: 12345
data:
  _target_: src.data.lhco_datamodule.LHCODataModule
  data_dir: ${paths.data_dir}
  batch_size: 128
  num_workers: 32
  pin_memory: false
  val_fraction: 0.05
  test_fraction: 0.35
  num_particles: ${model.num_particles}
  variable_jet_sizes: true
  centering: false
  normalize: true
  normalize_sigma: 1
  conditioning: true
  use_all_data: false
  relative_coords: true
  jet_type: all
  shuffle_data: false
  use_calculated_base_distribution: true
  file_suffix_processed_data: _masssorted
  log_pt: true
  pt_standardization: false
  multiplicity_conditioning: true
model:
  _target_: src.models.flow_matching_module.SetFlowMatchingLitModule
  optimizer:
    _target_: torch.optim.AdamW
    _partial_: true
    lr: 0.0003
    weight_decay: 5.0e-05
  scheduler:
    _target_: torch.optim.lr_scheduler.CosineAnnealingLR
    _partial_: true
    T_max: ${trainer.max_epochs}
  features: 3
  n_transforms: 1
  layers: 8
  hidden_dim: 150
  latent: 256
  activation: leaky_relu
  wrapper_func: weight_norm
  dropout: 0.0
  sum_scale: 0.01
  t_emb: cosine
  frequencies: 16
  t_global_cat: true
  t_local_cat: true
  add_time_to_input: false
  loss_type: FM-OT
  diff_config:
    max_sr: 0.999
    min_sr: 0.02
  criterion: mse
  sigma: 0.0001
  use_normaliser: false
  normaliser_config:
    max_n: 2000
  num_particles: 279
  global_cond_dim: 5
  local_cond_dim: 5
callbacks:
  model_checkpoint:
    _target_: src.callbacks.ema.EMAModelCheckpoint
    dirpath: ${paths.output_dir}/checkpoints
    filename: epoch_{epoch:03d}_loss_{val/loss:.5f}
    monitor: val/loss
    verbose: false
    save_last: true
    save_top_k: 5
    mode: min
    auto_insert_metric_name: false
    save_weights_only: false
    every_n_train_steps: null
    train_time_interval: null
    every_n_epochs: null
    save_on_train_epoch_end: null
    metric_map:
      val/loss: loss
  early_stopping: null
  model_summary:
    _target_: pytorch_lightning.callbacks.RichModelSummary
    max_depth: -1
  lr_monitor:
    _target_: pytorch_lightning.callbacks.LearningRateMonitor
    logging_interval: epoch
    log_momentum: false
  rich_progress_bar:
    _target_: pytorch_lightning.callbacks.RichProgressBar
  ema:
    _target_: src.callbacks.ema.EMA
    decay: 0.999
    apply_ema_every_n_steps: 1
    start_step: 0
    save_ema_weights_in_callback_state: true
    evaluate_ema_weights_instead: true
  lhco_eval_sr:
    _target_: src.callbacks.lhco.lhco_eval_sr.JetNetEvaluationCallbackSR
    every_n_epochs: 300
    num_jet_samples: -1
    image_path: ${paths.log_dir}callback_logs/
    model_name: lhco_flow_matching_both_jet_sr
    use_ema: true
    log_times: true
    log_epoch_zero: true
    data_type: val
    w_dist_config:
      num_eval_samples: 10000
      num_batches: 40
      calculate_efps: false
    generation_config:
      batch_size: 2048
      ode_solver: midpoint
      ode_steps: 100
      verbose: true
    plot_config:
      plot_efps: false
      plottype: ''
logger:
  comet:
    _target_: pytorch_lightning.loggers.comet.CometLogger
    api_key: ${oc.env:COMET_API_TOKEN}
    save_dir: ${paths.output_dir}
    project_name: LHCO
    rest_api_key: null
    experiment_key: null
    offline: false
    prefix: ''
    experiment_name: ${task_name}
  csv:
    _target_: pytorch_lightning.loggers.csv_logs.CSVLogger
    save_dir: ${paths.output_dir}
    name: csv/
    prefix: ''
  wandb:
    _target_: pytorch_lightning.loggers.wandb.WandbLogger
    save_dir: ${paths.output_dir}
    offline: false
    id: null
    anonymous: null
    project: LHCO
    log_model: false
    prefix: ''
    group: lhco_flow_matching
    tags: ${tags}
    job_type: ''
    name: ${task_name}
trainer:
  _target_: pytorch_lightning.Trainer
  default_root_dir: ${paths.output_dir}
  min_epochs: 500
  max_epochs: 5000
  accelerator: gpu
  devices: -1
  check_val_every_n_epoch: 1
  deterministic: false
  strategy: ddp
  num_nodes: 1
  sync_batchnorm: true
  gradient_clip_val: 0.5
paths:
  root_dir: ${oc.env:PROJECT_ROOT}
  data_dir: ${oc.env:DATA_DIR}
  log_dir: ${oc.env:LOG_DIR}
  output_dir: ${hydra:runtime.output_dir}
  work_dir: ${hydra:runtime.cwd}
extras:
  ignore_warnings: false
  enforce_tags: true
  print_config: true
